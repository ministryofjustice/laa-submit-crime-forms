apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "laa-submit-crime-forms.fullname" . }}-worker
spec:
  replicas: {{ .Values.replicaCount.worker }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 100%
  selector:
    matchLabels:
      app: {{ include "laa-submit-crime-forms.fullname" . }}-worker
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: {{ include "laa-submit-crime-forms.fullname" . }}-worker
        metrics-target: {{ include "laa-submit-crime-forms.fullname" . }}-metrics-target
    spec:
      serviceAccountName: {{ .Values.service_account.name }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}-worker
          securityContext:
            {{- include "laa-submit-crime-forms.defaultSecurityContext" . | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - bundle
            - exec
            - sidekiq
          ports:
            - name: http
              containerPort: {{ .Values.service.workerPort }}
              protocol: TCP
            - containerPort: 9394
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.workerPort }}
            initialDelaySeconds: 20
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.workerPort }}
            initialDelaySeconds: 20
            periodSeconds: 30
          resources:
            {{- toYaml .Values.worker_resources | nindent 12 }}
          env:
          {{ if .Values.redis.enabled }}
            - name: REDIS_PROTOCOL
              value: "redis"
            - name: REDIS_HOST
              value: {{ template "helm_deploy.redisUatHost" . }}
            - name: REDIS_PASSWORD
              value: {{ .Values.redis.auth.password }}
          {{ else }}
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: crm-elasticache
                  key: primary_endpoint_address
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: crm-elasticache
                  key: auth_token
          {{ end }}
          {{ if .Values.postgresql.enabled }}
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.postgresqlUsername }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgresql.auth.postgresPassword }}
            - name: POSTGRES_HOST
              value: {{ printf "%s-%s" .Release.Name "postgresql" | trunc 63 | trimSuffix "-" }}
            - name: POSTGRES_DATABASE
              value: {{ .Values.postgresql.auth.database }}
            - name: DATABASE_SSLMODE
              value: 'prefer'
          {{ else }}
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: rds-postgresql-instance-output
                  key: url
          {{ end }}
            - name: SECRET_KEY_BASE
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: secret_key_base
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: sentry-dsn
                  key: url
            - name: S3_BUCKET
              valueFrom:
                secretKeyRef:
                  name: s3-bucket-output
                  key: bucket_name
            - name: GOVUK_NOTIFY_API_KEY
              valueFrom:
                secretKeyRef:
                  name: notify-key
                  key: notify_key
            - name: AWS_REGION
              value: 'eu-west-2'
            - name: RACK_ENV
              value: 'production'
            - name: RAILS_ENV
              value: 'production'
            - name: RAILS_LOG_TO_STDOUT
              value: enabled
            - name: APP_STORE_URL
              value: {{ .Values.variables.appStore }}
            - name: ENV
              value: {{ .Values.variables.environment}}
            - name: ENTRA_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: entra-idam-secrets
                  key: entra-client-id
            - name: ENTRA_TENANT_ID
              valueFrom:
                secretKeyRef:
                  name: entra-idam-secrets
                  key: entra-tenant-id
            - name: ENTRA_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: entra-idam-secrets
                  key: entra-client-secret
            - name: NSM_MAX_UPLOAD_SIZE_BYTES
              value: {{ mul .Values.variables.nsmMaxFileUploadBytes 1 | quote }}
            - name: PA_MAX_UPLOAD_SIZE_BYTES
              value: {{ mul .Values.variables.paMaxFileUploadBytes 1 | quote }}
            - name: ANALYTICS_TRACKING_ID
              valueFrom:
                secretKeyRef:
                  name: google-analytics
                  key: tracking_key
            - name: APP_STORE_TENANT_ID
              valueFrom:
                secretKeyRef:
                  name: app-store-auth
                  key: tenant_id
            - name: APP_STORE_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: app-store-auth
                  key: app_client_id
            - name: PROVIDER_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: app-store-auth
                  key: provider_client_id
            - name: PROVIDER_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: app-store-auth
                  key: provider_client_secret
            - name: SEND_EMAILS
              value: 'true'
            - name: ENABLE_PROMETHEUS_EXPORTER
              value: 'true'
            - name: MAINTENANCE_MODE
              valueFrom:
                configMapKeyRef:
                  name: {{ include "laa-submit-crime-forms.fullname" . }}
                  key: MAINTENANCE_MODE
            - name: PROVIDER_API_HOST
              value: '{{ .Values.variables.providerApiHost }}'
            - name: PROVIDER_API_KEY
              valueFrom:
                secretKeyRef:
                  name: app-secrets
                  key: provider_api_key
            - name: CLAMD_CONF_FILENAME
              value: clamd.cloud-platform.conf
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
