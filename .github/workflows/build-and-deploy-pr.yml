name: Build and Deploy PR

on:
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    name: Build and push to ECR
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    outputs:
      image-tag: ${{ steps.set-tags.outputs.image-tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ECR_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.ECR_REGION }}
          mask-aws-account-id: true

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: true

      - name: Set ECR tags
        id: set-tags
        run: |
          IMAGE_TAG="branch-${{ github.sha }}"
          echo "image-tag=${IMAGE_TAG}" >> $GITHUB_OUTPUT
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.AWS_ECR_REGISTRY_ID }}.dkr.ecr.${{ secrets.ECR_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          build-args: |
            APP_BUILD_DATE=${{ github.event.head_commit.timestamp }}
            APP_BUILD_TAG=${{ github.sha }}
            APP_GIT_COMMIT=${{ github.sha }}
            APP_BRANCH_NAME=${{ github.ref_name }}

  e2e-test:
    name: E2E tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run E2E tests
        uses: ministryofjustice/crime-forms-end-to-end-tests@main
        with:
          e2e_current_image_var: NSCC_PROVIDER_IMAGE
          e2e_current_image: ${{ secrets.AWS_ECR_REGISTRY_ID }}.dkr.ecr.${{ secrets.ECR_REGION }}.amazonaws.com/${{ secrets.PROVIDER_ECR_REPOSITORY }}:${{ needs.build.outputs.image-tag }}
          e2e_branch: main

  deploy-feature-branch:
    name: Deploy feature branch to dev
    runs-on: ubuntu-latest
    needs: [build, e2e-test]
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ECR_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.ECR_REGION }}

      - name: Authenticate to Kubernetes cluster
        env:
          K8S_CLUSTER_NAME: ${{ secrets.AUTOGENERATED_SUBMIT_FORMS_DEV_K8S_CLUSTER_NAME }}
          K8S_CLUSTER_CERT: ${{ secrets.AUTOGENERATED_SUBMIT_FORMS_DEV_K8S_CLUSTER_CERT }}
          K8S_CLUSTER_URL: https://${{ secrets.AUTOGENERATED_SUBMIT_FORMS_DEV_K8S_CLUSTER_NAME }}
          K8S_NAMESPACE: ${{ secrets.AUTOGENERATED_SUBMIT_FORMS_DEV_K8S_NAMESPACE }}
          K8S_TOKEN: ${{ secrets.AUTOGENERATED_SUBMIT_FORMS_DEV_K8S_TOKEN }}
        run: |
          set +x  # Disable command echoing to prevent token leakage
          echo -n "${K8S_CLUSTER_CERT}" | base64 -d > ./ca.crt
          kubectl config set-cluster ${K8S_CLUSTER_NAME} --certificate-authority=./ca.crt --server=${K8S_CLUSTER_URL}
          kubectl config set-credentials github-actions --token=${K8S_TOKEN}
          kubectl config set-context ${K8S_CLUSTER_NAME} --cluster=${K8S_CLUSTER_NAME} --user=github-actions --namespace=${K8S_NAMESPACE}
          kubectl config use-context ${K8S_CLUSTER_NAME}
          kubectl --namespace=${K8S_NAMESPACE} get pods

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: '3.7.2'

      - name: Deploy feature branch using bin/deploy script
        env:
          CIRCLE_BRANCH: ${{ github.head_ref }}
          CIRCLE_SHA1: ${{ github.sha }}
          AWS_ECR_REGISTRY_ID: ${{ secrets.AWS_ECR_REGISTRY_ID }}
          ECR_REGION: ${{ secrets.ECR_REGION }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          K8S_NAMESPACE: ${{ secrets.AUTOGENERATED_SUBMIT_FORMS_DEV_K8S_NAMESPACE }}
        run: |
          ./bin/deploy dev

      - name: Output deployment URL
        run: |
          BRANCH_RELEASE_NAME=$(echo "${{ github.head_ref }}" | tr '[:upper:]' '[:lower:]' | sed 's:^\w*\/::' | tr -s ' _/[]().' '-' | cut -c1-18 | sed 's/-$//')
          RELEASE_HOST="${BRANCH_RELEASE_NAME}-nscc-provider-dev.cloud-platform.service.justice.gov.uk"
          echo "### ðŸš€ Feature branch deployed!" >> $GITHUB_STEP_SUMMARY
          echo "URL: https://${RELEASE_HOST}" >> $GITHUB_STEP_SUMMARY
