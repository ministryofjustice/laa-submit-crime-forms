#!/usr/bin/env ruby
# rubocop:disable Rails
require 'json'

module Colors
  class << self
    def red(str) = "\e[31m#{str}\e[0m"
    def yellow(str) = "\e[33m#{str}\e[0m"
    def green(str) = "\e[32m#{str}\e[0m"
    def cyan(str) = "\e[36m#{str}\e[0m"
    def bold(str) = "\e[1m#{str}\e[0m"
  end
end

# Save stdin to file and parse
input = $stdin.read
File.write(ARGV[0], input) unless ARGV.length != 1
json = JSON.parse(input)

vulns = []

if json['vulnerabilities'] && !json['vulnerabilities'].empty?
  vulns = json['vulnerabilities'].map do |v|
    if !v['upgradePath'] || v['upgradePath'].empty? || v['upgradePath'].all?(&:nil?)
      fix = Colors.red('NO UPGRADE PATH AVAILABLE - Manual intervention required')
    else
      fix = v['upgradePath'][0] ? "Upgrade via #{Colors.cyan(v['upgradePath'][0])}" : 'Upgrade direct dependency'
      fix += " to #{Colors.green(v['upgradePath'][1])}" if v['upgradePath'][1]
    end

    severity = case v['severity']&.downcase
               when 'high' then Colors.red(v['severity'])
               when 'medium' then Colors.yellow(v['severity'])
               when 'low' then Colors.green(v['severity'])
               else Colors.cyan(v['severity'])
               end

    # rubocop:disable Layout/HeredocIndentation#
    <<~VULN
#{Colors.bold(v['packageName'])} [#{severity}] #{v['title']} (CVSS: #{v['cvssScore']})
#{Colors.cyan("https://security.snyk.io/vuln/#{v['id']}")}
[ #{fix} ]

    VULN
    # rubocop:enable Layout/HeredocIndentation
  end
end

puts vulns unless vulns.empty?
puts 'No vulnerabilities found' if vulns.empty?

exit vulns.length
# rubocop:enable Rails
